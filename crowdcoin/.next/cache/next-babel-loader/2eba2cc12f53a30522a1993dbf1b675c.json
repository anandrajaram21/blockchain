{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from './../../components/Layout';\nimport { Card } from 'semantic-ui-react';\nimport Campaign from './../../ethereum/campaign';\nimport web3 from './../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      minimumContribution: summary['0'],\n      balance: summary['1'],\n      requestsCount: summary['2'],\n      approversCount: summary['3'],\n      manager: summary['4']\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestsCount,\n      approversCount,\n      manager\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Address of the manager',\n      description: 'The manager created this campaign and can create requests to withdraw money',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum Contribution (wei)',\n      description: 'You must contribute at least this much wei to become a contributor.'\n    }, {\n      header: requestsCount,\n      meta: 'Number of Requests',\n      description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers'\n    }, {\n      header: approversCount,\n      meta: 'Number of Approvers',\n      description: 'Number of people who have already donated to this campaign.'\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Campaign Balance (ether)',\n      description: 'The balance is how much money this campaign has left to spend'\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), this.renderCards(), __jsx(ContributeForm, null));\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/home/anand/Documents/blockchain/crowdcoin/pages/campaigns/show.js"],"names":["React","Component","Layout","Card","Campaign","web3","ContributeForm","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACpC,eAAaO,eAAb,CAA6BC,KAA7B,EAAoC;AACnC,UAAMC,QAAQ,GAAGN,QAAQ,CAACK,KAAK,CAACE,KAAN,CAAYC,OAAb,CAAzB;AAEA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AAEA,WAAO;AACNC,MAAAA,mBAAmB,EAAEJ,OAAO,CAAC,GAAD,CADtB;AAENK,MAAAA,OAAO,EAAEL,OAAO,CAAC,GAAD,CAFV;AAGNM,MAAAA,aAAa,EAAEN,OAAO,CAAC,GAAD,CAHhB;AAINO,MAAAA,cAAc,EAAEP,OAAO,CAAC,GAAD,CAJjB;AAKNQ,MAAAA,OAAO,EAAER,OAAO,CAAC,GAAD;AALV,KAAP;AAOA;;AAEDS,EAAAA,WAAW,GAAG;AACb,UAAM;AACLL,MAAAA,mBADK;AAELC,MAAAA,OAFK;AAGLC,MAAAA,aAHK;AAILC,MAAAA,cAJK;AAKLC,MAAAA;AALK,QAMF,KAAKZ,KANT;AAQA,UAAMc,KAAK,GAAG,CACb;AACCC,MAAAA,MAAM,EAAEH,OADT;AAECI,MAAAA,IAAI,EAAE,wBAFP;AAGCC,MAAAA,WAAW,EAAE,6EAHd;AAICC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAJR,KADa,EAOb;AACCJ,MAAAA,MAAM,EAAEP,mBADT;AAECQ,MAAAA,IAAI,EAAE,4BAFP;AAGCC,MAAAA,WAAW,EAAE;AAHd,KAPa,EAYb;AACCF,MAAAA,MAAM,EAAEL,aADT;AAECM,MAAAA,IAAI,EAAE,oBAFP;AAGCC,MAAAA,WAAW,EAAE;AAHd,KAZa,EAiBb;AACCF,MAAAA,MAAM,EAAEJ,cADT;AAECK,MAAAA,IAAI,EAAE,qBAFP;AAGCC,MAAAA,WAAW,EAAE;AAHd,KAjBa,EAsBb;AACCF,MAAAA,MAAM,EAAEnB,IAAI,CAACwB,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA4B,OAA5B,CADT;AAECO,MAAAA,IAAI,EAAE,0BAFP;AAGCC,MAAAA,WAAW,EAAE;AAHd,KAtBa,CAAd;AA6BA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB,MAAP;AACA;;AAEDQ,EAAAA,MAAM,GAAG;AACR,WACC,MAAC,MAAD,QACC,kCADD,EAEG,KAAKT,WAAL,EAFH,EAGC,MAAC,cAAD,OAHD,CADD;AAOA;;AAhEmC;;AAmErC,eAAef,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './../../components/Layout';\nimport { Card } from 'semantic-ui-react';\nimport Campaign from './../../ethereum/campaign';\nimport web3 from './../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\n\nclass CampaignShow extends Component {\n\tstatic async getInitialProps(props) {\n\t\tconst campaign = Campaign(props.query.address);\n\n\t\tconst summary = await campaign.methods.getSummary().call();\n\n\t\treturn {\n\t\t\tminimumContribution: summary['0'],\n\t\t\tbalance: summary['1'],\n\t\t\trequestsCount: summary['2'],\n\t\t\tapproversCount: summary['3'],\n\t\t\tmanager: summary['4']\n\t\t};\n\t}\n\n\trenderCards() {\n\t\tconst {\n\t\t\tminimumContribution,\n\t\t\tbalance,\n\t\t\trequestsCount,\n\t\t\tapproversCount,\n\t\t\tmanager\n\t\t} = this.props;\n\n\t\tconst items = [\n\t\t\t{\n\t\t\t\theader: manager,\n\t\t\t\tmeta: 'Address of the manager',\n\t\t\t\tdescription: 'The manager created this campaign and can create requests to withdraw money',\n\t\t\t\tstyle: { overflowWrap: 'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: minimumContribution,\n\t\t\t\tmeta: 'Minimum Contribution (wei)',\n\t\t\t\tdescription: 'You must contribute at least this much wei to become a contributor.'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: requestsCount,\n\t\t\t\tmeta: 'Number of Requests',\n\t\t\t\tdescription: 'A request tries to withdraw money from the contract. Requests must be approved by approvers'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: approversCount,\n\t\t\t\tmeta: 'Number of Approvers',\n\t\t\t\tdescription: 'Number of people who have already donated to this campaign.'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: web3.utils.fromWei(balance, 'ether'),\n\t\t\t\tmeta: 'Campaign Balance (ether)',\n\t\t\t\tdescription: 'The balance is how much money this campaign has left to spend'\n\t\t\t}\n\t\t];\n\n\t\treturn <Card.Group items={items} />\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<h3>Campaign Show</h3>\n\t\t\t\t{ this.renderCards() }\n\t\t\t\t<ContributeForm />\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}