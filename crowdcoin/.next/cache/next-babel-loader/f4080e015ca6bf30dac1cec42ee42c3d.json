{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from './../../components/Layout';\nimport { Card } from 'semantic-ui-react';\nimport Campaign from './../../ethereum/campaign';\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CampaignShow).apply(this, arguments));\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          minimumContribution = _this$props.minimumContribution,\n          balance = _this$props.balance,\n          requestsCount = _this$props.requestsCount,\n          approversCount = _this$props.approversCount,\n          manager = _this$props.manager;\n      var items = [{\n        header: manager,\n        meta: 'Address of the manager',\n        description: 'The manager created this campaign and can create requests to withdraw money',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), this.renderCards());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var campaign, summary;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              campaign = Campaign(props.query.address);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(campaign.methods.getSummary().call());\n\n            case 3:\n              summary = _context.sent;\n              return _context.abrupt(\"return\", {\n                minimumContribution: summary['0'],\n                balance: summary['1'],\n                requestsCount: summary['2'],\n                approversCount: summary['3'],\n                manager: summary['4']\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/home/anand/Documents/blockchain/crowdcoin/pages/campaigns/show.js"],"names":["React","Component","Layout","Card","Campaign","CampaignShow","props","minimumContribution","balance","requestsCount","approversCount","manager","items","header","meta","description","style","overflowWrap","renderCards","campaign","query","address","methods","getSummary","call","summary"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;IAEMC,Y;;;;;;;;;;;kCAeS;AAAA,wBAOT,KAAKC,KAPI;AAAA,UAEZC,mBAFY,eAEZA,mBAFY;AAAA,UAGZC,OAHY,eAGZA,OAHY;AAAA,UAIZC,aAJY,eAIZA,aAJY;AAAA,UAKZC,cALY,eAKZA,cALY;AAAA,UAMZC,OANY,eAMZA,OANY;AASb,UAAMC,KAAK,GAAG,CACb;AACCC,QAAAA,MAAM,EAAEF,OADT;AAECG,QAAAA,IAAI,EAAE,wBAFP;AAGCC,QAAAA,WAAW,EAAE,6EAHd;AAICC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AAJR,OADa,CAAd;AASA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEL;AAAnB,QAAP;AACA;;;6BAEQ;AACR,aACC,MAAC,MAAD,QACC,kCADD,EAEG,KAAKM,WAAL,EAFH,CADD;AAMA;;;oCA1C4BZ,K;;;;;;AACtBa,cAAAA,Q,GAAWf,QAAQ,CAACE,KAAK,CAACc,KAAN,CAAYC,OAAb,C;;+CAEHF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,E;;;AAAhBC,cAAAA,O;+CAEC;AACNlB,gBAAAA,mBAAmB,EAAEkB,OAAO,CAAC,GAAD,CADtB;AAENjB,gBAAAA,OAAO,EAAEiB,OAAO,CAAC,GAAD,CAFV;AAGNhB,gBAAAA,aAAa,EAAEgB,OAAO,CAAC,GAAD,CAHhB;AAINf,gBAAAA,cAAc,EAAEe,OAAO,CAAC,GAAD,CAJjB;AAKNd,gBAAAA,OAAO,EAAEc,OAAO,CAAC,GAAD;AALV,e;;;;;;;;;;;;EANkBxB,S;;AA8C3B,eAAeI,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './../../components/Layout';\nimport { Card } from 'semantic-ui-react';\nimport Campaign from './../../ethereum/campaign';\n\nclass CampaignShow extends Component {\n\tstatic async getInitialProps(props) {\n\t\tconst campaign = Campaign(props.query.address);\n\n\t\tconst summary = await campaign.methods.getSummary().call();\n\n\t\treturn {\n\t\t\tminimumContribution: summary['0'],\n\t\t\tbalance: summary['1'],\n\t\t\trequestsCount: summary['2'],\n\t\t\tapproversCount: summary['3'],\n\t\t\tmanager: summary['4']\n\t\t};\n\t}\n\n\trenderCards() {\n\t\tconst {\n\t\t\tminimumContribution,\n\t\t\tbalance,\n\t\t\trequestsCount,\n\t\t\tapproversCount,\n\t\t\tmanager\n\t\t} = this.props;\n\n\t\tconst items = [\n\t\t\t{\n\t\t\t\theader: manager,\n\t\t\t\tmeta: 'Address of the manager',\n\t\t\t\tdescription: 'The manager created this campaign and can create requests to withdraw money',\n\t\t\t\tstyle: { overflowWrap: 'break-word'}\n\t\t\t}\n\t\t];\n\n\t\treturn <Card.Group items={items} />\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<h3>Campaign Show</h3>\n\t\t\t\t{ this.renderCards() }\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}