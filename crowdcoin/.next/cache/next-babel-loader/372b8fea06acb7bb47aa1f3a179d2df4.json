{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\n\nvar ContributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  function ContributeForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContributeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContributeForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Form, null, __jsx(Form.Field, null, __jsx(\"label\", {\n        htmlFor: \"\"\n      }, \"Amount to Contribute\"), __jsx(Input, {\n        value: this.state.value,\n        label: \"ether\",\n        labelPosition: \"right\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            value: event.target.value\n          });\n        }\n      })), __jsx(Button, {\n        primary: true\n      }, \"Contribute!\"));\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport default ContributeForm;","map":{"version":3,"sources":["/home/anand/Documents/blockchain/crowdcoin/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","ContributeForm","value","event","preventDefault","state","setState","target"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;;IAEMC,c;;;;;;;;;;;;;;;;4DACG;AACPC,MAAAA,KAAK,EAAE;AADA,K;;+DAIG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AACVA,cAAAA,KAAK,CAACC,cAAN;;AADU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAIF;AAAA;;AACR,aACC,MAAC,IAAD,QACC,MAAC,IAAD,CAAM,KAAN,QACC;AAAO,QAAA,OAAO,EAAC;AAAf,gCADD,EAEC,MAAC,KAAD;AACC,QAAA,KAAK,EAAG,KAAKC,KAAL,CAAWH,KADpB;AAEC,QAAA,KAAK,EAAC,OAFP;AAGC,QAAA,aAAa,EAAC,OAHf;AAIC,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBAAI,MAAI,CAACG,QAAL,CAAc;AAAEJ,YAAAA,KAAK,EAAEC,KAAK,CAACI,MAAN,CAAaL;AAAtB,WAAd,CAAJ;AAAA;AAJhB,QAFD,CADD,EAWC,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,uBAXD,CADD;AAiBA;;;;EA3B2BN,S;;AA8B7B,eAAeK,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\n\nclass ContributeForm extends Component {\n\tstate = {\n\t\tvalue: ''\n\t};\n\n\tonSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Form>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label htmlFor=\"\">Amount to Contribute</label>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tvalue={ this.state.value }\n\t\t\t\t\t\tlabel=\"ether\"\n\t\t\t\t\t\tlabelPosition=\"right\"\n\t\t\t\t\t\tonChange={event => this.setState({ value: event.target.value }) }\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t\n\t\t\t\t<Button primary>\n\t\t\t\t\tContribute!\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t)\n\t}\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}