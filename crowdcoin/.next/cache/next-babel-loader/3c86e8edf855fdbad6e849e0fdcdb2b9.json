{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Campaign from './../ethereum/campaign';\nimport web3 from './../ethereum/web3';\nimport { Router } from './../routes';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const campaign = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, 'ether')\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        errorMessage: ''\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", {\n      htmlFor: \"\"\n    }, \"Amount to Contribute\"), __jsx(Input, {\n      value: this.state.value,\n      label: \"ether\",\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true\n    }, \"Contribute!\"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/home/anand/Documents/blockchain/crowdcoin/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","web3","Router","ContributeForm","value","errorMessage","loading","event","preventDefault","setState","campaign","props","address","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","err","message","render","onSubmit","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC9B;AACPS,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,YAAY,EAAE,EAFP;AAGPC,MAAAA,OAAO,EAAE;AAHF,KAD8B;;AAAA,sCAO3B,MAAOC,KAAP,IAAiB;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEA,YAAMI,QAAQ,GAAGV,QAAQ,CAAC,KAAKW,KAAL,CAAWC,OAAZ,CAAzB;;AAEA,UAAI;AAEH,cAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AAEA,cAAML,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACxCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CAD0B;AAExCT,UAAAA,KAAK,EAAEH,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWlB,KAA5B,EAAmC,OAAnC;AAFiC,SAAnC,CAAN;AAKAF,QAAAA,MAAM,CAACqB,YAAP,CAAqB,cAAa,KAAKZ,KAAL,CAAWC,OAAQ,EAArD;AAEA,OAXD,CAWE,OAAMY,GAAN,EAAW;AACZ,aAAKf,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAEmB,GAAG,CAACC;AAApB,SAAd;AACA;;AAED,WAAKhB,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,KAAX;AAAkBD,QAAAA,YAAY,EAAE;AAAhC,OAAd;AACA,KA9BqC;AAAA;;AAgCtCqB,EAAAA,MAAM,GAAG;AACR,WACC,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAG,KAAKC,QAAtB;AAAiC,MAAA,KAAK,EAAG,CAAC,CAAC,KAAKL,KAAL,CAAWjB;AAAtD,OACC,MAAC,IAAD,CAAM,KAAN,QACC;AAAO,MAAA,OAAO,EAAC;AAAf,8BADD,EAEC,MAAC,KAAD;AACC,MAAA,KAAK,EAAG,KAAKiB,KAAL,CAAWlB,KADpB;AAEC,MAAA,KAAK,EAAC,OAFP;AAGC,MAAA,aAAa,EAAC,OAHf;AAIC,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKE,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEG,KAAK,CAACqB,MAAN,CAAaxB;AAAtB,OAAd;AAJpB,MAFD,CADD,EAWC,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,OAAtB;AAA8B,MAAA,OAAO,EAAG,KAAKkB,KAAL,CAAWjB;AAAnD,MAXD,EAaC,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAG,KAAKiB,KAAL,CAAWhB,OAA7B;AAAuC,MAAA,OAAO;AAA9C,qBAbD,CADD;AAmBA;;AApDqC;;AAuDvC,eAAeH,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Campaign from './../ethereum/campaign';\nimport web3 from './../ethereum/web3';\nimport { Router } from './../routes';\n\nclass ContributeForm extends Component {\n\tstate = {\n\t\tvalue: '',\n\t\terrorMessage: '',\n\t\tloading: false\n\t};\n\n\tonSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tthis.setState({ loading: true });\n\n\t\tconst campaign = Campaign(this.props.address);\n\n\t\ttry {\n\n\t\t\tconst accounts = await web3.eth.getAccounts();\n\n\t\t\tawait campaign.methods.contribute().send({\n\t\t\t\tfrom: accounts[0],\n\t\t\t\tvalue: web3.utils.toWei(this.state.value, 'ether')\n\t\t\t});\n\n\t\t\tRouter.replaceRoute(`/campaigns/${this.props.address}`);\n\n\t\t} catch(err) {\n\t\t\tthis.setState({ errorMessage: err.message });\n\t\t}\n\n\t\tthis.setState({ loading: false, errorMessage: '' })\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Form onSubmit={ this.onSubmit } error={ !!this.state.errorMessage }>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label htmlFor=\"\">Amount to Contribute</label>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tvalue={ this.state.value }\n\t\t\t\t\t\tlabel=\"ether\"\n\t\t\t\t\t\tlabelPosition=\"right\"\n\t\t\t\t\t\tonChange={event => this.setState({ value: event.target.value }) }\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Message error header=\"Oops!\" content={ this.state.errorMessage }/>\n\t\t\t\t\n\t\t\t\t<Button loading={ this.state.loading } primary>\n\t\t\t\t\tContribute!\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t)\n\t}\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}