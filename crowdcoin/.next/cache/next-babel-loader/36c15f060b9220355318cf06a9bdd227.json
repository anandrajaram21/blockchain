{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from './../../../routes';\nimport Layout from './../../../components/Layout';\nimport Campaign from './../../../ethereum/campaign';\nimport RequestRow from './../../../components/RequestRow';\n\nvar RequestIndex = /*#__PURE__*/function (_Component) {\n  _inherits(RequestIndex, _Component);\n\n  function RequestIndex() {\n    _classCallCheck(this, RequestIndex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RequestIndex).apply(this, arguments));\n  }\n\n  _createClass(RequestIndex, [{\n    key: \"renderRow\",\n    value: function renderRow() {\n      var _this = this;\n\n      return this.props.requests.map(function (request, index) {\n        return __jsx(RequestRow, {\n          id: index,\n          key: index,\n          request: request,\n          address: _this.props.address,\n          approversCount: _this.props.approversCount\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Header = Table.Header,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body;\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Requests\"), __jsx(Link, {\n        route: \"/campaigns/\".concat(this.props.address, \"/requests/new\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true\n      }, \"Add Request\"))), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"Description\"), __jsx(HeaderCell, null, \"Amount\"), __jsx(HeaderCell, null, \"Recipient\"), __jsx(HeaderCell, null, \"Approval Count\"), __jsx(HeaderCell, null, \"Approve\"), __jsx(HeaderCell, null, \"Finalize\"))), __jsx(Body, null, this.renderRow())));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var address, campaign, requestsCount, approversCount, requests;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              address = props.query.address;\n              campaign = Campaign(address);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(campaign.methods.getRequestsCount().call());\n\n            case 4:\n              requestsCount = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(campaign.methods.approversCount().call());\n\n            case 7:\n              approversCount = _context.sent;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Promise.all(Array(parseInt(requestsCount)).fill().map(function (element, index) {\n                return campaign.methods.requests(index).call();\n              })));\n\n            case 10:\n              requests = _context.sent;\n              return _context.abrupt(\"return\", {\n                address: address,\n                requests: requests,\n                requestsCount: requestsCount,\n                approversCount: approversCount\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return RequestIndex;\n}(Component);\n\nexport default RequestIndex;","map":{"version":3,"sources":["/home/anand/Documents/blockchain/crowdcoin/pages/campaigns/requests/index.js"],"names":["React","Component","Button","Table","Link","Layout","Campaign","RequestRow","RequestIndex","props","requests","map","request","index","address","approversCount","Header","Row","HeaderCell","Body","renderRow","query","campaign","methods","getRequestsCount","call","requestsCount","Promise","all","Array","parseInt","fill","element"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,QAAP,MAAsB,8BAAtB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;IAEMC,Y;;;;;;;;;;;gCAgBO;AAAA;;AACX,aAAO,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAClD,eACC,MAAC,UAAD;AACC,UAAA,EAAE,EAAGA,KADN;AAEC,UAAA,GAAG,EAAGA,KAFP;AAGC,UAAA,OAAO,EAAGD,OAHX;AAIC,UAAA,OAAO,EAAG,KAAI,CAACH,KAAL,CAAWK,OAJtB;AAKC,UAAA,cAAc,EAAG,KAAI,CAACL,KAAL,CAAWM;AAL7B,UADD;AASA,OAVM,CAAP;AAWA;;;6BAEQ;AAAA,UACAC,MADA,GACkCb,KADlC,CACAa,MADA;AAAA,UACQC,GADR,GACkCd,KADlC,CACQc,GADR;AAAA,UACaC,UADb,GACkCf,KADlC,CACae,UADb;AAAA,UACyBC,IADzB,GACkChB,KADlC,CACyBgB,IADzB;AAER,aACC,MAAC,MAAD,QACC,6BADD,EAEC,MAAC,IAAD;AAAM,QAAA,KAAK,uBAAgB,KAAKV,KAAL,CAAWK,OAA3B;AAAX,SACC,iBACC,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,uBADD,CADD,CAFD,EAQC,MAAC,KAAD,QACC,MAAC,MAAD,QACC,MAAC,GAAD,QACC,MAAC,UAAD,aADD,EAEC,MAAC,UAAD,sBAFD,EAGC,MAAC,UAAD,iBAHD,EAIC,MAAC,UAAD,oBAJD,EAKC,MAAC,UAAD,yBALD,EAMC,MAAC,UAAD,kBAND,EAOC,MAAC,UAAD,mBAPD,CADD,CADD,EAYC,MAAC,IAAD,QACG,KAAKM,SAAL,EADH,CAZD,CARD,CADD;AA2BA;;;oCA1D4BX,K;;;;;;AACpBK,cAAAA,O,GAAYL,KAAK,CAACY,K,CAAlBP,O;AACFQ,cAAAA,Q,GAAWhB,QAAQ,CAACQ,OAAD,C;;+CACGQ,QAAQ,CAACC,OAAT,CAAiBC,gBAAjB,GAAoCC,IAApC,E;;;AAAtBC,cAAAA,a;;+CACuBJ,QAAQ,CAACC,OAAT,CAAiBR,cAAjB,GAAkCU,IAAlC,E;;;AAAvBV,cAAAA,c;;+CAEiBY,OAAO,CAACC,GAAR,CACtBC,KAAK,CAACC,QAAQ,CAACJ,aAAD,CAAT,CAAL,CAA+BK,IAA/B,GAAsCpB,GAAtC,CAA0C,UAACqB,OAAD,EAAUnB,KAAV,EAAoB;AAC7D,uBAAOS,QAAQ,CAACC,OAAT,CAAiBb,QAAjB,CAA0BG,KAA1B,EAAiCY,IAAjC,EAAP;AACA,eAFD,CADsB,C;;;AAAjBf,cAAAA,Q;+CAMC;AAAEI,gBAAAA,OAAO,EAAPA,OAAF;AAAWJ,gBAAAA,QAAQ,EAARA,QAAX;AAAqBgB,gBAAAA,aAAa,EAAbA,aAArB;AAAoCX,gBAAAA,cAAc,EAAdA;AAApC,e;;;;;;;;;;;;EAbkBd,S;;AA8D3B,eAAeO,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from './../../../routes';\nimport Layout from './../../../components/Layout';\nimport Campaign from  './../../../ethereum/campaign';\nimport RequestRow from './../../../components/RequestRow';\n\nclass RequestIndex extends Component {\n\tstatic async getInitialProps(props) {\n\t\tconst { address } = props.query;\n\t\tconst campaign = Campaign(address);\n\t\tconst requestsCount = await campaign.methods.getRequestsCount().call();\n\t\tconst approversCount = await campaign.methods.approversCount().call();\n\n\t\tconst requests = await Promise.all(\n\t\t\tArray(parseInt(requestsCount)).fill().map((element, index) => {\n\t\t\t\treturn campaign.methods.requests(index).call();\n\t\t\t})\n\t\t)\n\n\t\treturn { address, requests, requestsCount, approversCount };\n\t}\n\n\trenderRow() {\n\t\treturn this.props.requests.map((request, index) => {\n\t\t\treturn (\n\t\t\t\t<RequestRow\n\t\t\t\t\tid={ index }\n\t\t\t\t\tkey={ index }\n\t\t\t\t\trequest={ request }\n\t\t\t\t\taddress={ this.props.address }\n\t\t\t\t\tapproversCount={ this.props.approversCount }\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { Header, Row, HeaderCell, Body } = Table;\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<h3>Requests</h3>\n\t\t\t\t<Link route={`/campaigns/${this.props.address}/requests/new`}>\n\t\t\t\t\t<a>\n\t\t\t\t\t\t<Button primary>Add Request</Button>\n\t\t\t\t\t</a>\n\t\t\t\t</Link>\n\n\t\t\t\t<Table>\n\t\t\t\t\t<Header>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<HeaderCell>ID</HeaderCell>\n\t\t\t\t\t\t\t<HeaderCell>Description</HeaderCell>\n\t\t\t\t\t\t\t<HeaderCell>Amount</HeaderCell>\n\t\t\t\t\t\t\t<HeaderCell>Recipient</HeaderCell>\n\t\t\t\t\t\t\t<HeaderCell>Approval Count</HeaderCell>\n\t\t\t\t\t\t\t<HeaderCell>Approve</HeaderCell>\n\t\t\t\t\t\t\t<HeaderCell>Finalize</HeaderCell>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Header>\n\t\t\t\t\t<Body>\n\t\t\t\t\t\t{ this.renderRow() }\n\t\t\t\t\t</Body>\n\t\t\t\t</Table>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default RequestIndex;"]},"metadata":{},"sourceType":"module"}